#EIGEN3
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/eigen)

#OpenMP
FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF(OPENMP_FOUND)

#Cuda
IF(NOT CUDA_TOOLKIT_ROOT_DIR)
  SET(CUDA_TOOLKIT_ROOT_DIR "/usr/local/cuda")
ENDIF()
FIND_PACKAGE(CUDAToolkit)
FIND_PACKAGE(CUDA QUIET)
IF(CUDA_FOUND)
  INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
  MESSAGE(STATUS "Found CUDA @ ${CUDA_INCLUDE_DIRS}")
  LIST(APPEND ALL_LIBRARIES ${CUDA_LIBRARIES} ${CUDA_cublas_LIBRARY} ${CUDA_cusolver_LIBRARY})
  ADD_DEFINITIONS(-DWITH_CUDA)
ELSE(CUDA_FOUND)
  MESSAGE(WARNING "Cannot find CUDA, compiling without it!")
ENDIF(CUDA_FOUND)

#CGAL
FIND_PACKAGE(CGAL QUIET)
IF(CGAL_FOUND)
  INCLUDE_DIRECTORIES(${CGAL_INCLUDE_DIRS})
  MESSAGE(STATUS "Found CGAL @ ${CGAL_INCLUDE_DIRS}")
  LIST(APPEND ALL_LIBRARIES ${CGAL_LIBRARY})
ELSE(CGAL_FOUND)
  MESSAGE(STATUS "Cannot find CGAL, 3D meshing not supported!")
ENDIF(CGAL_FOUND)
